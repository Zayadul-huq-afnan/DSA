#include<bits/stdc++.h>

using namespace std;

const int N = 1e5;

vector<int>adj[N];

bool visited[N];
int color[N];
bool ok = true;
void dfs(int source){
    visited[source] = true;

    for(auto x: adj[source]){
        if(!visited[x]){
            color[x] = color[source] ^ 1;
            dfs(x);
        }
        else{
            if(color[source] == color[x]){
                ok = false;
            }
        }
    }

}

int main(){

    ios_base::sync_with_stdio(false);
    cin.tie();

    int n , m;
    cin>>n>>m;

    for(int i = 0 ; i < m ; i++){
        int u , v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    for(int i = 1 ; i <= n ; i++){
        if(!visited[i]){
            dfs(i);
        }
    }

    if(ok){
        cout<<"YES"<<"\n";
    }
    else{
        cout<<"NO"<<"\n";
    }

    return 0;

}
